{"version":3,"sources":["Components/Todo/Todo.tsx","Components/TodosList/TodosList.tsx","Helpers/api.ts","App.tsx","index.tsx"],"names":["TodoCard","todo","key","id","className","title","user","name","completed","TodosList","todos","map","getAll","URL","a","fetch","then","response","json","App","useState","initialTodos","setInitialTodos","setTodos","loading","setLoading","isLoaded","setIsLoaded","startLoadingFromServer","todosFromServer","usersFromServer","preparedTodos","find","userId","setTimeout","type","onClick","sortedNames","sort","b","localeCompare","sortedTitles","sortedCompleted","disabled","ReactDOM","render","document","getElementById"],"mappings":"iSAOaA,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,wBACEC,IAAKD,EAAKE,GACVC,UAAU,cAEV,2BAAIH,EAAKI,OACT,2BAAIJ,EAAKK,MAAQL,EAAKK,KAAKC,MAC1BN,EAAKO,UACJ,mCAEA,4CCTOC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,wBAAIN,UAAU,cACXM,EAAMC,KAAI,SAAAV,GAAI,OACb,kBAAC,EAAD,CAAUA,KAAMA,SCVlBW,EAAM,uCAAG,WAAUC,GAAV,SAAAC,EAAA,+EACNC,MAHO,uCAGSF,GACpBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAFhB,2CAAH,sDC2FGC,G,MArFO,WAAO,IAAD,EACcC,mBAAiB,IAD/B,mBACnBC,EADmB,KACLC,EADK,OAEAF,mBAAiB,IAFjB,mBAEnBV,EAFmB,KAEZa,EAFY,OAGIH,oBAAS,GAHb,mBAGnBI,EAHmB,KAGVC,EAHU,OAIML,oBAAS,GAJf,mBAInBM,EAJmB,KAITC,EAJS,KAMpBC,EAAsB,uCAAG,gCAAAd,EAAA,6DAC7BW,GAAW,GADkB,SDNcb,EAAO,UCMrB,cAGvBiB,EAHuB,gBDPcjB,EAAO,UCOrB,OAIvBkB,EAJuB,OAMvBC,EAAgBF,EAAgBlB,KAAI,SAAAV,GAAI,kCACzCA,GADyC,IAE5CK,KAAMwB,EAAgBE,MAAK,SAAA1B,GAAI,OAAIA,EAAKH,KAAOF,EAAKgC,eAGtDC,YAAW,WACTZ,EAAgBS,GAChBR,EAASQ,GACTJ,GAAY,KACX,KAf0B,2CAAH,qDA8C5B,OACE,yBAAKvB,UAAU,OACXsB,EAKChB,IAAU,IAEP,oCACE,yBAAKN,UAAU,iBACb,4BAAQ+B,KAAK,SAASC,QAvCtB,WACZb,EAASF,KAuCK,wCAEF,4BAAQc,KAAK,SAASC,QAtCX,WACvB,IAAMC,EAAc,YAAIhB,GAAciB,MAAK,SAACxB,EAAGyB,GAC7C,OAAOzB,EAAER,MAAQiC,EAAEjC,KACfQ,EAAER,KAAKC,KAAKiC,cAAcD,EAAEjC,KAAKC,MACjC,KAGNgB,EAASc,KAgCK,+CAEF,4BAAQF,KAAK,SAASC,QA/BV,WACxB,IAAMK,EAAe,YAAIpB,GAAciB,MAAK,SAACxB,EAAGyB,GAC9C,OAAOzB,EAAET,MAAMmC,cAAcD,EAAElC,UAGjCkB,EAASkB,KA2BK,gDAEF,4BAAQN,KAAK,SAASC,QA1BL,WAC7B,IAAMM,EAAkB,YAAIrB,GAAciB,MAAK,SAACxB,GAAD,OAAQA,EAAEN,UAAY,GAAK,KAE1Ee,EAASmB,KAwBK,sDAIJ,kBAAC,EAAD,CAAWhC,MAAOA,KAtBxB,4BAAQyB,KAAK,SAASC,QAASR,EAAwBe,SAAUnB,GAC/D,8BAAQA,EAAmB,aAAT,YC5D5BoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.57209f3f.chunk.js","sourcesContent":["import React from 'react';\nimport Todo from '../../Helpers/api';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoCard: React.FC<Props> = ({ todo }) => (\n  <li\n    key={todo.id}\n    className=\"todo__item\"\n  >\n    <p>{todo.title}</p>\n    <p>{todo.user && todo.user.name}</p>\n    {todo.completed ? (\n      <p>Done</p>\n    ) : (\n      <p>In Progress</p>\n    )}\n  </li>\n);\n","import React from 'react';\nimport { TodoCard } from '../Todo/Todo';\nimport Todo from '../../Helpers/api';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodosList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"todo__list\">\n      {todos.map(todo => (\n        <TodoCard todo={todo} />\n      ))}\n    </ul>\n  );\n};\n","const API_URL = 'https://jsonplaceholder.typicode.com';\n\nconst getAll = async <T>(URL: string): Promise<T[]> => {\n  return fetch(API_URL + URL)\n    .then(response => response.json());\n};\n\nexport const getUsers = (): Promise<User[]> => getAll('/users');\nexport const getTodos = (): Promise<Todo[]> => getAll('/todos');\n\nexport interface Todo {\n  userId: number;\n  id: number;\n  title: string;\n  completed: boolean;\n  user?: User;\n}\n\nexport interface User {\n  id: number;\n  name: string;\n}\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport { TodosList } from './Components/TodosList/TodosList';\nimport {\n  getUsers, getTodos, Todo,\n} from './Helpers/api';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const startLoadingFromServer = async () => {\n    setLoading(true);\n\n    const todosFromServer = await getTodos();\n    const usersFromServer = await getUsers();\n\n    const preparedTodos = todosFromServer.map(todo => ({\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId),\n    }));\n\n    setTimeout(() => {\n      setInitialTodos(preparedTodos);\n      setTodos(preparedTodos);\n      setIsLoaded(true);\n    }, 500);\n  };\n\n  const reset = () => {\n    setTodos(initialTodos);\n  };\n\n  const handleSortByName = () => {\n    const sortedNames = [...initialTodos].sort((a, b) => {\n      return a.user && b.user\n        ? a.user.name.localeCompare(b.user.name)\n        : 0;\n    });\n\n    setTodos(sortedNames);\n  };\n\n  const handleSortByTitle = () => {\n    const sortedTitles = [...initialTodos].sort((a, b) => {\n      return a.title.localeCompare(b.title);\n    });\n\n    setTodos(sortedTitles);\n  };\n\n  const handleSortByCompletion = () => {\n    const sortedCompleted = [...initialTodos].sort((a) => (a.completed ? 1 : -1));\n\n    setTodos(sortedCompleted);\n  };\n\n  return (\n    <div className=\"App\">\n      {!isLoaded ? (\n        <button type=\"button\" onClick={startLoadingFromServer} disabled={loading}>\n          <span>{!loading ? 'Load' : 'Loading...'}</span>\n        </button>\n      ) : (\n        (todos !== [])\n          && (\n            <>\n              <div className=\"buttons__list\">\n                <button type=\"button\" onClick={reset}>\n                  <span>reset</span>\n                </button>\n                <button type=\"button\" onClick={handleSortByName}>\n                  <span>sort by name</span>\n                </button>\n                <button type=\"button\" onClick={handleSortByTitle}>\n                  <span>sort by title</span>\n                </button>\n                <button type=\"button\" onClick={handleSortByCompletion}>\n                  <span>sort by completion</span>\n                </button>\n              </div>\n\n              <TodosList todos={todos} />\n            </>\n          )\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}